name: Deploy Application Docker Image to GCP VM

on:
  push:
    branches: [main]

jobs:
  # -------------------------------
  # Continuous Integration
  # -------------------------------
  Continuous-Integration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build, tag, and push Docker image
        env:
          GAR_LOCATION: ${{ secrets.GCP_REGION }}-docker.pkg.dev
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          REPO_NAME: ${{ secrets.GAR_REPOSITORY }}
          IMAGE_NAME: myapp
          IMAGE_TAG: latest
        run: |
          docker build -t $GAR_LOCATION/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG .
          docker push $GAR_LOCATION/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG
          echo "IMAGE=$GAR_LOCATION/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG" >> $GITHUB_ENV

  # -------------------------------
  # Continuous Deployment
  # -------------------------------
  Continuous-Deployment:
    needs: Continuous-Integration
    runs-on: self-hosted  # Or your GCP VM registered as a self-hosted runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Pull and Run Docker Container
        env:
          GAR_LOCATION: ${{ secrets.GCP_REGION }}-docker.pkg.dev
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          REPO_NAME: ${{ secrets.GAR_REPOSITORY }}
          IMAGE_NAME: myapp
          IMAGE_TAG: latest
        run: |
          docker pull $GAR_LOCATION/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG
          docker stop myapp || true
          docker rm myapp || true
          docker run -d -p 5000:5000 --name myapp \
            -e MONGODB_URL="mongodb://host.docker.internal:27017" \
            $GAR_LOCATION/$PROJECT_ID/$REPO_NAME/$IMAGE_NAME:$IMAGE_TAG
