name: CI/CD - Deploy to GCP VM

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: myapp
  IMAGE_TAG: latest
  REGION: us-central1
  REPO_NAME: my-app-repo

jobs:
  # -------------------------------
  # Continuous Integration
  # -------------------------------
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GCP CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          docker build -t $IMAGE .
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Push Docker image to Artifact Registry
        run: |
          docker push $IMAGE

  # -------------------------------
  # Continuous Deployment
  # -------------------------------
  deploy:
    needs: build-and-push
    runs-on: self-hosted  # Your GCP VM registered as GitHub runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up GCP CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Pull and run Docker container
        env:
          IMAGE: ${{ env.IMAGE }}
          MONGODB_URL: ${{ secrets.MONGODB_URL }}
        run: |
          docker pull $IMAGE
          docker stop ${{ env.IMAGE_NAME }} || true
          docker rm ${{ env.IMAGE_NAME }} || true
          docker run -d -p 5000:5000 --name ${{ env.IMAGE_NAME }} \
            -e MONGODB_URL="$MONGODB_URL" \
            $IMAGE
